name: Measure coverage

on:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build and run tests with JaCoCo
        env:
          APPLICATION_TEST_PROPERTIES: "src/main/resources/application-test.properties"
        run: |
          mvn clean verify -Dspring.profiles.active=test -Dspring.config.location="$APPLICATION_TEST_PROPERTIES"

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco

      - name: Check coverage thresholds
        run: |
          # Install xmlstarlet if not already installed
          sudo apt-get update
          sudo apt-get install -y xmlstarlet
          
          # Extract coverage metrics from JaCoCo report
          COVERAGE=$(xmlstarlet sel -t -v "sum(//counter[@type='LINE']/@covered)" target/site/jacoco/jacoco.xml)
          TOTAL_LINES=$(xmlstarlet sel -t -v "sum(//counter[@type='LINE']/@missed)" target/site/jacoco/jacoco.xml)
          
          # Check if coverage metrics are valid numbers
          if [[ ! $COVERAGE =~ ^[0-9]+$ || ! $TOTAL_LINES =~ ^[0-9]+$ ]]; then
            echo "Error: Failed to parse coverage numbers from JaCoCo report."
            exit 1
          fi
          
          # Calculate coverage percentage
          COVERAGE_PERCENT=$(( $COVERAGE * 100 / ($COVERAGE + $TOTAL_LINES) ))
          
          THRESHOLD=80
          
          # Check coverage against threshold
          if (( $COVERAGE_PERCENT < $THRESHOLD )); then
            echo "Error: coverage is below the threshold ($THRESHOLD%)"
            exit 1
          else
            echo "Coverage is satisfactory"
          fi