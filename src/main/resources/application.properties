##Application
#spring.application.name=payment
## AWS SSM
#spring.config.import=optional:aws-secretsmanager:/secret/payment
## AWS account
#aws.region=us-east-1
#aws.credentials.access_key_id=${AWS_ACCESS_KEY_ID}
#aws.credentials.secret_access_key=${AWS_ACCESS_SECRET_KEY}
## AWS dynamodb
#aws.dynamodb.endpoint=https://dynamodb.us-east-1.amazonaws.com
## AWS sqs
#aws.sqs.production.name=order-production-queue
## Mercado Pago
#mercado.pago.api.order=https://api.mercadopago.com
#mercado.pago.access_token=${MERCADO_PAGO_ACCESS_TOKEN}
#mercado.pago.merchant_id=1613065352
#mercado.pago.merchant_order_id=SUC001POS002
#mercado.pago.endpoint.payment=${mercado.pago.api.order}/v1/payments/{payment_id}
#mercado.pago.endpoint.qr.code=${mercado.pago.api.order}/instore/orders/qr/seller/collectors/${mercado.pago.merchant_id}/pos/${mercado.pago.merchant_order_id}/qrs
#mercado.pago.notification.url=${NOTIFICATION_URL}

aws.region=testApplication
aws.credentials.access_key_id=testApplication
aws.credentials.secret_access_key=testApplication
# AWS dynamodb
aws.dynamodb.endpoint=testApplication
# AWS sqs
aws.sqs.production.name=testApplication
# Mercado Pago
mercado.pago.api.order=testApplication
mercado.pago.access_token=testApplication
mercado.pago.merchant_id=testApplication
mercado.pago.merchant_order_id=testApplication
mercado.pago.endpoint.payment=testApplication
mercado.pago.endpoint.qr.code=testApplication
mercado.pago.notification.url=testApplication